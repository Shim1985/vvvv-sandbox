//@author: 
//@help: 
//@tags: filter
//@credits:

Texture2D tex0: PREVIOUS;
Texture2D tex1 <string uiname="Control";>;
SamplerState s0 <string uiname="Sampler";> {Filter=MIN_MAG_MIP_LINEAR;AddressU=CLAMP;AddressV=CLAMP;};
float2 R:TARGETSIZE;

cbuffer controls:register(b0){
	float Amount = 0.5;
	float Exponent = 1.0;
	float2 Center = {0.0, 0.0};
	float SampleCenter <float uimin=-1;float uimax=1.0;> = 0;
	float Hue <float uimin=0.0;float uimax=1.0;> = 0.0;
};

#include "ColorSpace.fxh"
float4 hueshift(float2 x, float2 off){
	float2 pos = 0.5+Center*float2(.5,-.5);
	x+=normalize(pos-x)*pow(distance(pos,x),Exponent)*Amount*off;
	return float4(HSVtoRGB(float3(Hue,0,0)+RGBtoHSV(tex0.SampleLevel(s0,x,0).xyz)),1);
}

float4 pSHIFTRGB(float4 PosWVP:SV_POSITION,float2 x:TEXCOORD0):SV_TARGET{
    float4 c=tex0.SampleLevel(s0,x,0);
    float sh=.1*tex1.SampleLevel(s0,x,0).x;
    c.r=hueshift(x,sh*( 1+SampleCenter)).r;
    c.g=hueshift(x,sh*( 0+SampleCenter)).g;
    c.b=hueshift(x,sh*(-1+SampleCenter)).b;
    c.rgb=HSVtoRGB(-float3(Hue,0,0)+RGBtoHSV(c.xyz));
    //if(Alpha)c=float4(c.rgb*c.a,pa);

    return c;
}

technique10 ShiftRGB{
	pass P1
	{SetPixelShader(CompileShader(ps_4_0,pSHIFTRGB()));}
}



